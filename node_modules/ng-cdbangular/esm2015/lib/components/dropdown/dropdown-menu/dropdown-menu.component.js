import { animate, state, style, transition, trigger, } from '@angular/animations';
import { Component, ElementRef, Input, Renderer2, ViewChild, ViewEncapsulation, } from '@angular/core';
import { createPopper } from '@popperjs/core';
export class DropdownMenuComponent {
    constructor(elRef, renderer) {
        this.elRef = elRef;
        this.renderer = renderer;
        this.placement = 'bottom';
        this.popperInstance = null;
        this.isOpen = false;
    }
    ngOnInit() {
        this.renderer.removeAttribute(this.elRef.nativeElement, 'class');
        this.renderer.removeAttribute(this.elRef.nativeElement, 'style');
        if (this.isOpen === false) {
            this.dropdownMenuAnimationState = 'hidden';
        }
        else {
            this.dropdownMenuAnimationState = 'visible';
        }
    }
    ngAfterViewInit() {
        if (this.color) {
            this.renderer.addClass(this.dropdownMenu.nativeElement, this.color);
        }
    }
    toggleDropdown(event) {
        if (this.popperInstance === null) {
            this.initPopper(event.target);
        }
        else {
            this.destroyPopper();
        }
    }
    initPopper(toggler) {
        this.renderer.addClass(this.dropdownMenu.nativeElement, 'show');
        setTimeout(() => {
            this.dropdownMenuAnimationState = 'visible';
        }, 110);
        this.popperInstance = createPopper(toggler, this.dropdownMenu.nativeElement, {
            // placement: `${this.placement}-start`,
            placement: this.placement,
            modifiers: [
                {
                    name: 'flip',
                    enabled: false,
                },
                {
                    name: 'offset',
                    options: {
                        offset: [0, 14],
                    },
                },
            ],
        });
    }
    destroyPopper() {
        setTimeout(() => {
            this.renderer.removeClass(this.dropdownMenu.nativeElement, 'show');
            this.popperInstance.destroy();
            this.popperInstance = null;
        }, 250);
        this.dropdownMenuAnimationState = 'hidden';
    }
}
DropdownMenuComponent.decorators = [
    { type: Component, args: [{
                selector: 'CDBDropDownMenu',
                exportAs: 'cdbDropdownMenu',
                template: "<div #dropdownMenu [@dropdownMenu]=\"dropdownMenuAnimationState\" class=\"dropdown-menu CDBDropDownMenu {{ class }}\"\n    [style]=\"style\">\n    <ng-content></ng-content>\n</div>",
                animations: [
                    trigger('dropdownMenu', [
                        state('hidden', style({
                            height: '0px',
                            overflow: 'hidden',
                            opacity: 0,
                        })),
                        state('visible', style({
                            opacity: 1,
                            height: '*',
                            overflow: 'visible',
                        })),
                        transition('hidden => visible', [
                            animate('300ms ease', style({
                                height: '*',
                                opacity: 1,
                                overflow: 'visible',
                            })),
                        ]),
                        transition('visible => hidden', [
                            animate('300ms ease', style({
                                opacity: 0,
                                height: '0px',
                                overflow: 'hidden',
                            })),
                        ]),
                    ]),
                ],
                encapsulation: ViewEncapsulation.None,
                styles: [".primary{background-color:#276ef1;border-color:#276ef1;box-sizing:border-box;color:#fff}.primary:hover{background-color:rgba(39,110,241,.7411764705882353);color:#fff}.secondary{background-color:#7356bf;border-color:#7356bf;color:#fff}.secondary:hover{background-color:rgba(115,86,191,.7411764705882353);color:#fff}.success{background-color:#05944f;border-color:#05944f;color:#fff}.success:hover{background-color:rgba(5,148,79,.7411764705882353);color:#fff}.danger{background-color:#e11900;border-color:#e11900;color:#fff}.danger:hover{background-color:rgba(225,25,0,.7411764705882353);color:#fff}.warning{background-color:#ffe975;border-color:#ffe975;color:#66512c}.warning:hover{background-color:rgba(255,233,117,.7411764705882353);color:#66512c}.dark{background-color:#000;border-color:#000;color:#fff}.dark:hover{background-color:rgba(0,0,0,.7411764705882353);color:#fff}.light{background-color:#eee;border-color:#eee;color:#000}.light:hover{background-color:hsla(0,0%,93.3%,.7411764705882353);color:#000}.white{background-color:#fff;border-color:#fff;color:#000}.white:hover{background-color:hsla(0,0%,100%,.8352941176470589);color:#000}.info{background-color:#17a2b8;border-color:#17a2b8;color:#fff}.info:hover{background-color:rgba(23,162,184,.7411764705882353);color:#fff}.CDBDropDownMenu{border-radius:0;min-height:20px;min-width:20px;padding:1em}"]
            },] }
];
DropdownMenuComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
DropdownMenuComponent.propDecorators = {
    class: [{ type: Input }],
    style: [{ type: Input }],
    color: [{ type: Input }],
    placement: [{ type: Input }],
    dropdownMenu: [{ type: ViewChild, args: ['dropdownMenu', { static: false },] }]
};
//# sourceMappingURL=data:application/json;base64,