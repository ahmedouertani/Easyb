import { Component, Input, ViewEncapsulation } from '@angular/core';
export class TablePaginationComponent {
    constructor() { }
    numberOfPages() {
        return Math.ceil(this.tableEl.getDataSource().length / this.tableEl.getEntries());
    }
    pagesArray() {
        let pages = [];
        for (let i = 0; i < this.numberOfPages(); i++) {
            pages.push(i);
        }
        return pages;
    }
    changeActivePage(page) {
        if (!(page < 0 || page > this.pagesArray().length - 1)) {
            this.tableEl.changeActivePage(page);
        }
    }
    ngOnInit() { }
}
TablePaginationComponent.decorators = [
    { type: Component, args: [{
                selector: 'CDBTable-pagination',
                template: "<div data-test='datatable-pagination' class='col-sm-12 col-md-12 pr-0'>\n    <div>\n        <CDBPagination [sm]='true'>\n            <CDBPagelink (click)='changeActivePage(tableEl.activePage-1)' [disabled]='tableEl.activePage <= 0'>\n                <span>Prev</span>\n            </CDBPagelink>\n            <CDBPageitem *ngFor='let page of pagesArray()' (click)='changeActivePage(page)'>\n                {{page + 1}}\n            </CDBPageitem>\n            <CDBPagelink aria-label='label' (click)='changeActivePage(tableEl.activePage+1)'\n                [disabled]='tableEl.activePage == numberOfPages() - 1'>\n                <span>Next</span>\n            </CDBPagelink>\n        </CDBPagination>\n    </div>\n</div>",
                encapsulation: ViewEncapsulation.None,
                styles: [""]
            },] }
];
TablePaginationComponent.ctorParameters = () => [];
TablePaginationComponent.propDecorators = {
    tableEl: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtcGFnaW5hdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FwcGxlL0RvY3VtZW50cy9wcm9qZWN0cy9wcm9qZWN0X2RldndhcmVzL0NvbnRyYXN0LUJvb3RzdHJhcC1Bbmd1bGFyL3Byb2plY3RzL25nLWNkYmFuZ3VsYXIvc3JjLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGFibGUvdGFibGUtcGFnaW5hdGlvbi90YWJsZS1wYWdpbmF0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVM1RSxNQUFNLE9BQU8sd0JBQXdCO0lBdUJuQyxnQkFBZSxDQUFDO0lBcEJoQixhQUFhO1FBQ1gsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUNkLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLENBQ2hFLENBQUM7SUFDSixDQUFDO0lBRUQsVUFBVTtRQUNSLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNmLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsYUFBYSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDN0MsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNmO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQsZ0JBQWdCLENBQUMsSUFBSTtRQUNuQixJQUFJLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFFO1lBQ3RELElBQUksQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDckM7SUFDSCxDQUFDO0lBSUQsUUFBUSxLQUFVLENBQUM7OztZQS9CcEIsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLCt0QkFBZ0Q7Z0JBRWhELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOzthQUN0Qzs7OztzQkFFRSxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2RiVGFibGVEaXJlY3RpdmUgfSBmcm9tICcuLi9kaXJlY3RpdmVzL2NkYi10YWJsZS5kaXJlY3RpdmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdDREJUYWJsZS1wYWdpbmF0aW9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhYmxlLXBhZ2luYXRpb24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90YWJsZS1wYWdpbmF0aW9uLmNvbXBvbmVudC5zY3NzJ10sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG59KVxuZXhwb3J0IGNsYXNzIFRhYmxlUGFnaW5hdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIHRhYmxlRWw6IENkYlRhYmxlRGlyZWN0aXZlO1xuXG4gIG51bWJlck9mUGFnZXMoKSB7XG4gICAgcmV0dXJuIE1hdGguY2VpbChcbiAgICAgIHRoaXMudGFibGVFbC5nZXREYXRhU291cmNlKCkubGVuZ3RoIC8gdGhpcy50YWJsZUVsLmdldEVudHJpZXMoKVxuICAgICk7XG4gIH1cblxuICBwYWdlc0FycmF5KCkge1xuICAgIGxldCBwYWdlcyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5udW1iZXJPZlBhZ2VzKCk7IGkrKykge1xuICAgICAgcGFnZXMucHVzaChpKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhZ2VzO1xuICB9XG5cbiAgY2hhbmdlQWN0aXZlUGFnZShwYWdlKSB7XG4gICAgaWYgKCEocGFnZSA8IDAgfHwgcGFnZSA+IHRoaXMucGFnZXNBcnJheSgpLmxlbmd0aCAtIDEpKSB7XG4gICAgICB0aGlzLnRhYmxlRWwuY2hhbmdlQWN0aXZlUGFnZShwYWdlKTtcbiAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7fVxufVxuIl19