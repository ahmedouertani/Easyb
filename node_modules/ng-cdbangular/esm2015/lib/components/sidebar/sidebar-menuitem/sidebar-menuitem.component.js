import { Component, ElementRef, Input, Renderer2, ViewChild, ViewEncapsulation, } from '@angular/core';
import { Router, NavigationEnd } from '@angular/router';
import { filter } from 'rxjs/operators';
import { SidebarService } from '../sidebar.service';
export class SidebarMenuitemComponent {
    constructor(elRef, renderer, sidebarService, router) {
        this.elRef = elRef;
        this.renderer = renderer;
        this.sidebarService = sidebarService;
        this.router = router;
        this.toggled = false;
    }
    ngOnInit() {
        this.renderer.removeAttribute(this.elRef.nativeElement, 'class');
        this.renderer.removeAttribute(this.elRef.nativeElement, 'style');
        this.sidebarService.sidebarState.subscribe((state) => {
            this.toggled = state;
            this.setToggled();
        });
        if (!this.link && !this.href) {
            this.link = '/';
        }
    }
    ngAfterViewInit() {
        this.sidebarService.backgroundColor.subscribe((state) => {
            this.backgroundColor = state;
        });
        this.sidebarService.textColor.subscribe((state) => {
            this.textColor = state;
        });
        if (this.link) {
            // Setting Active Link
            this.router.events
                .pipe(filter((e) => e instanceof NavigationEnd))
                .subscribe((navEnd) => {
                if (navEnd.urlAfterRedirects === this.link) {
                    this.setStyle();
                }
                else {
                    this.removeStyle();
                }
            });
        }
    }
    setToggled() {
        if (this.toggled === true) {
            this.renderer.addClass(this.sidebarMenuItem.nativeElement, 'toggled');
            this.renderer.addClass(this.sidebarMenuItemInner.nativeElement, 'toggled');
        }
        else {
            this.renderer.removeClass(this.sidebarMenuItem.nativeElement, 'toggled');
            this.renderer.removeClass(this.sidebarMenuItemInner.nativeElement, 'toggled');
        }
    }
    setStyle() {
        this.renderer.setStyle(this.sidebarMenuItemInner.nativeElement, 'color', this.backgroundColor);
        this.renderer.setStyle(this.sidebarMenuItemInner.nativeElement, 'background', this.textColor);
    }
    removeStyle() {
        this.renderer.removeAttribute(this.sidebarMenuItemInner.nativeElement, 'style');
    }
}
SidebarMenuitemComponent.decorators = [
    { type: Component, args: [{
                selector: 'CDBSidebarMenuItem',
                template: "<ng-container *ngIf=\"link\">\n    <a #sidebarMenuLink [routerLink]=\"link\" class=\"sidebarMenuLink\">\n        <ng-container *ngTemplateOutlet=\"menuItemContent\"></ng-container>\n    </a>\n</ng-container>\n\n<ng-container *ngIf=\"href\">\n    <a #sidebarMenuLink [href]=\"href\" target=\"_blank\" rel=\"noopener\" class=\"sidebarMenuLink\">\n        <ng-container *ngTemplateOutlet=\"menuItemContent\"></ng-container>\n    </a>\n</ng-container>\n\n<ng-template #menuItemContent>\n    <li #sidebarMenuItem class=\"InnerMenuLi {{ class }}\" [style]=\"style\">\n        <div #sidebarMenuItemInner class=\"CDBSidebarMenuItem-default\">\n            <ng-container *ngIf=\"icon\">\n                <i class=\"side-icon fa fa-{{ icon }} fa-lg {{ iconClass }}\"></i>\n            </ng-container>\n\n            <span class=\"item-content\">\n                <ng-content></ng-content>\n            </span>\n            <span *ngIf=\"suffix\" class=\"suffix-wrapper\">\n                <ng-container *ngTemplateOutlet=\"suffix\"></ng-container>\n            </span>\n        </div>\n    </li>\n</ng-template>",
                encapsulation: ViewEncapsulation.None,
                styles: [".primary{background-color:#276ef1;border-color:#276ef1;box-sizing:border-box;color:#fff}.primary:hover{background-color:rgba(39,110,241,.7411764705882353);color:#fff}.secondary{background-color:#7356bf;border-color:#7356bf;color:#fff}.secondary:hover{background-color:rgba(115,86,191,.7411764705882353);color:#fff}.success{background-color:#05944f;border-color:#05944f;color:#fff}.success:hover{background-color:rgba(5,148,79,.7411764705882353);color:#fff}.danger{background-color:#e11900;border-color:#e11900;color:#fff}.danger:hover{background-color:rgba(225,25,0,.7411764705882353);color:#fff}.warning{background-color:#ffe975;border-color:#ffe975;color:#66512c}.warning:hover{background-color:rgba(255,233,117,.7411764705882353);color:#66512c}.dark{background-color:#000;border-color:#000;color:#fff}.dark:hover{background-color:rgba(0,0,0,.7411764705882353);color:#fff}.light{background-color:#eee;border-color:#eee;color:#000}.light:hover{background-color:hsla(0,0%,93.3%,.7411764705882353);color:#000}.white{background-color:#fff;border-color:#fff;color:#000}.white:hover{background-color:hsla(0,0%,100%,.8352941176470589);color:#000}.info{background-color:#17a2b8;border-color:#17a2b8;color:#fff}.info:hover{background-color:rgba(23,162,184,.7411764705882353);color:#fff}.CDBSidebarMenuItem-default{align-items:center;cursor:pointer;display:flex;height:45px;outline:none;padding:8px 2px 8px 15px;position:relative}.CDBSidebarMenuItem-default .side-icon{margin-right:10px;width:30px}.CDBSidebarMenuItem-default.active{background:#fff;color:#000}.CDBSidebarMenuItem-default .item-content{flex-grow:1;flex-shrink:1;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.CDBSidebarMenuItem-default .suffix-wrapper{margin-right:23px}.CDBSidebarMenuItem-default.toggled{padding-left:13px;padding-right:13px}.CDBSidebarMenuItem-default.toggled .suffix-wrapper{opacity:0}.InnerMenuLi{list-style:none;margin:10px 15px}.InnerMenuLi.toggled{margin-bottom:0;margin-top:0;position:relative}.InnerMenuLi.toggled:before{bottom:0;content:\"\";cursor:pointer;display:inline-block;left:0;position:absolute;right:0;top:0}.sidebarMenuLink,.sidebarMenuLink:active,.sidebarMenuLink:hover{color:inherit;text-decoration:none}"]
            },] }
];
SidebarMenuitemComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: SidebarService },
    { type: Router }
];
SidebarMenuitemComponent.propDecorators = {
    class: [{ type: Input }],
    style: [{ type: Input }],
    icon: [{ type: Input }],
    iconClass: [{ type: Input }],
    suffix: [{ type: Input }],
    link: [{ type: Input }],
    href: [{ type: Input }],
    sidebarMenuItem: [{ type: ViewChild, args: ['sidebarMenuItem', { static: false },] }],
    sidebarMenuItemInner: [{ type: ViewChild, args: ['sidebarMenuItemInner', { static: false },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci1tZW51aXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FwcGxlL0RvY3VtZW50cy9wcm9qZWN0cy9wcm9qZWN0X2RldndhcmVzL0NvbnRyYXN0LUJvb3RzdHJhcC1Bbmd1bGFyL3Byb2plY3RzL25nLWNkYmFuZ3VsYXIvc3JjLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvc2lkZWJhci9zaWRlYmFyLW1lbnVpdGVtL3NpZGViYXItbWVudWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxTQUFTLEVBQ1QsVUFBVSxFQUNWLEtBQUssRUFFTCxTQUFTLEVBQ1QsU0FBUyxFQUNULGlCQUFpQixHQUNsQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsTUFBTSxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFRcEQsTUFBTSxPQUFPLHdCQUF3QjtJQWlCbkMsWUFDVSxLQUFpQixFQUNqQixRQUFtQixFQUNuQixjQUE4QixFQUM5QixNQUFjO1FBSGQsVUFBSyxHQUFMLEtBQUssQ0FBWTtRQUNqQixhQUFRLEdBQVIsUUFBUSxDQUFXO1FBQ25CLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUM5QixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBVnhCLFlBQU8sR0FBWSxLQUFLLENBQUM7SUFXdEIsQ0FBQztJQUVKLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNqRSxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztR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QUs7cUJBQ0wsS0FBSzttQkFDTCxLQUFLO21CQUNMLEtBQUs7OEJBTUwsU0FBUyxTQUFDLGlCQUFpQixFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRTttQ0FDOUMsU0FBUyxTQUFDLHNCQUFzQixFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsXG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgSW5wdXQsXG4gIE9uSW5pdCxcbiAgUmVuZGVyZXIyLFxuICBWaWV3Q2hpbGQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciwgTmF2aWdhdGlvbkVuZCB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBmaWx0ZXIgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBTaWRlYmFyU2VydmljZSB9IGZyb20gJy4uL3NpZGViYXIuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ0NEQlNpZGViYXJNZW51SXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9zaWRlYmFyLW1lbnVpdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vc2lkZWJhci1tZW51aXRlbS5jb21wb25lbnQuc2NzcyddLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxufSlcbmV4cG9ydCBjbGFzcyBTaWRlYmFyTWVudWl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuICBASW5wdXQoKSBjbGFzczogc3RyaW5nO1xuICBASW5wdXQoKSBzdHlsZTogc3RyaW5nO1xuICBASW5wdXQoKSBpY29uOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGljb25DbGFzczogc3RyaW5nO1xuICBASW5wdXQoKSBzdWZmaXg7XG4gIEBJbnB1dCgpIGxpbms6IHN0cmluZztcbiAgQElucHV0KCkgaHJlZjogc3RyaW5nO1xuICBhY3RpdmU6IGJvb2xlYW47XG4gIHRleHRDb2xvcjogc3RyaW5nO1xuICBiYWNrZ3JvdW5kQ29sb3I6IHN0cmluZztcbiAgdG9nZ2xlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBWaWV3Q2hpbGQoJ3NpZGViYXJNZW51SXRlbScsIHsgc3RhdGljOiBmYWxzZSB9KSBzaWRlYmFyTWVudUl0ZW06IEVsZW1lbnRSZWY7XG4gIEBWaWV3Q2hpbGQoJ3NpZGViYXJNZW51SXRlbUlubmVyJywgeyBzdGF0aWM6IGZhbHNlIH0pXG4gIHNpZGViYXJNZW51SXRlbUlubmVyOiBFbGVtZW50UmVmO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZWxSZWY6IEVsZW1lbnRSZWYsXG4gICAgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLFxuICAgIHByaXZhdGUgc2lkZWJhclNlcnZpY2U6IFNpZGViYXJTZXJ2aWNlLFxuICAgIHByaXZhdGUgcm91dGVyOiBSb3V0ZXJcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQXR0cmlidXRlKHRoaXMuZWxSZWYubmF0aXZlRWxlbWVudCwgJ2NsYXNzJyk7XG4gICAgdGhpcy5yZW5kZXJlci5yZW1vdmVBdHRyaWJ1dGUodGhpcy5lbFJlZi5uYXRpdmVFbGVtZW50LCAnc3R5bGUnKTtcblxuICAgIHRoaXMuc2lkZWJhclNlcnZpY2Uuc2lkZWJhclN0YXRlLnN1YnNjcmliZSgoc3RhdGU6IGJvb2xlYW4pID0+IHtcbiAgICAgIHRoaXMudG9nZ2xlZCA9IHN0YXRlO1xuICAgICAgdGhpcy5zZXRUb2dnbGVkKCk7XG4gICAgfSk7XG5cbiAgICBpZiAoIXRoaXMubGluayAmJiAhdGhpcy5ocmVmKSB7XG4gICAgICB0aGlzLmxpbmsgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRoaXMuc2lkZWJhclNlcnZpY2UuYmFja2dyb3VuZENvbG9yLnN1YnNjcmliZSgoc3RhdGU6IHN0cmluZykgPT4ge1xuICAgICAgdGhpcy5iYWNrZ3JvdW5kQ29sb3IgPSBzdGF0ZTtcbiAgICB9KTtcblxuICAgIHRoaXMuc2lkZWJhclNlcnZpY2UudGV4dENvbG9yLnN1YnNjcmliZSgoc3RhdGU6IHN0cmluZykgPT4ge1xuICAgICAgdGhpcy50ZXh0Q29sb3IgPSBzdGF0ZTtcbiAgICB9KTtcblxuICAgIGlmICh0aGlzLmxpbmspIHtcbiAgICAgIC8vIFNldHRpbmcgQWN0aXZlIExpbmtcbiAgICAgIHRoaXMucm91dGVyLmV2ZW50c1xuICAgICAgICAucGlwZShmaWx0ZXIoKGUpID0+IGUgaW5zdGFuY2VvZiBOYXZpZ2F0aW9uRW5kKSlcbiAgICAgICAgLnN1YnNjcmliZSgobmF2RW5kOiBOYXZpZ2F0aW9uRW5kKSA9PiB7XG4gICAgICAgICAgaWYgKG5hdkVuZC51cmxBZnRlclJlZGlyZWN0cyA9PT0gdGhpcy5saW5rKSB7XG4gICAgICAgICAgICB0aGlzLnNldFN0eWxlKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlU3R5bGUoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHNldFRvZ2dsZWQoKSB7XG4gICAgaWYgKHRoaXMudG9nZ2xlZCA9PT0gdHJ1ZSkge1xuICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLnNpZGViYXJNZW51SXRlbS5uYXRpdmVFbGVtZW50LCAndG9nZ2xlZCcpO1xuICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyhcbiAgICAgICAgdGhpcy5zaWRlYmFyTWVudUl0ZW1Jbm5lci5uYXRpdmVFbGVtZW50LFxuICAgICAgICAndG9nZ2xlZCdcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3ModGhpcy5zaWRlYmFyTWVudUl0ZW0ubmF0aXZlRWxlbWVudCwgJ3RvZ2dsZWQnKTtcbiAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3MoXG4gICAgICAgIHRoaXMuc2lkZWJhck1lbnVJdGVtSW5uZXIubmF0aXZlRWxlbWVudCxcbiAgICAgICAgJ3RvZ2dsZWQnXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIHNldFN0eWxlKCkge1xuICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUoXG4gICAgICB0aGlzLnNpZGViYXJNZW51SXRlbUlubmVyLm5hdGl2ZUVsZW1lbnQsXG4gICAgICAnY29sb3InLFxuICAgICAgdGhpcy5iYWNrZ3JvdW5kQ29sb3JcbiAgICApO1xuXG4gICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZShcbiAgICAgIHRoaXMuc2lkZWJhck1lbnVJdGVtSW5uZXIubmF0aXZlRWxlbWVudCxcbiAgICAgICdiYWNrZ3JvdW5kJyxcbiAgICAgIHRoaXMudGV4dENvbG9yXG4gICAgKTtcbiAgfVxuXG4gIHJlbW92ZVN0eWxlKCkge1xuICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQXR0cmlidXRlKFxuICAgICAgdGhpcy5zaWRlYmFyTWVudUl0ZW1Jbm5lci5uYXRpdmVFbGVtZW50LFxuICAgICAgJ3N0eWxlJ1xuICAgICk7XG4gIH1cbn1cbiJdfQ==